@model FoodApplication.Models.foodViewModel

@{
    ViewData["Title"] = "Display";
}

<head>
    <meta name="viewport" content="width=device-width" />
    <title>Food</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">


    <style>
        body {
            background-color: #001f3f; /* Navy blue background */
            color: white; /* Default text color to ensure readability on the dark background */
            font-family: Georgia, 'Times New Roman', Times, serif;
        }

        h1 {
            color: white; /* Ensure the heading is visible against the navy blue background */
        }

        .meal-box {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid #ddd;
            background-color: #001f3f; /* Slightly transparent white for meal box background */
            border-radius: 10px;
        }

        .meal-info {
            flex-grow: 1;
            text-align: left;
        }

            .meal-info h2 {
                margin: 0;
                font-size: 28px;
                font-weight: bold;
                color: white; /* Ensure the product name is visible */
            }

            .meal-info p {
                margin: 5px 0;
                font-size: 18px;
                color: white; /* Ensure the product information is visible */
            }

            .meal-info .price {
                font-size: 16px;
                font-weight: bold;
                color: white;
            }

        .meal-image-quantity {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .meal-box img {
            width: 200px;
            height: 200px;
            object-fit: cover;
            margin-bottom: 10px;
            border-radius: 15px;
        }

        .quantity-controls {
            display: flex;
            align-items: center;
        }

        .quantity-btn {
            width: 30px;
            height: 30px;
            background-color: white;
            color: #001f3f;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            text-align: center;
            line-height: 30px;
            font-size: 18px;
            margin: 0 5px;
        }

            .quantity-btn:hover {
                background-color: #001f3f;
                color: white;
                border-color: white;
            }

        .quantity-input {
            width: 40px;
            text-align: center;
            color: black;
        }

        .add-to-cart-btn {
            background-color: white; /* Initial white background */
            color: #001f3f; /* Navy blue text */
            padding: 10px 20px;
            border: 2px solid #001f3f; /* Navy blue border */
            border-radius: 10px;
            cursor: pointer;
            margin-top: 10px;
            transition: background-color 0.3s, color 0.3s;
        }

            .add-to-cart-btn:hover {
                background-color: #001f3f; /* Navy blue background on hover */
                color: white; /* White text on hover */
                border-color: white; /* White border on hover */
            }

        .view-cart-btn {
            

           position: fixed; /* Fixed position on the screen */
            top: 50%; /* Center vertically */
            right: 0; /* Align to the right of the screen */
            transform: translateY(-50%); /* Adjust position to be centered vertically */
            background-color: white; /* White background initially */
            color: #001f3f; /* Navy blue text */
            padding: 20px; /* Padding around the icon */
            border: 2px solid #001f3f; /* Navy blue border */
            font-size: 24px; /* Font size for the icon */
            text-align: center;
            cursor: pointer;
            transition: background-color 0.3s, color 0.3s, border-color 0.3s; /* Smooth transition for hover effect */
            z-index: 1000; /* Ensures it stays above other content */
            border-radius: 10px 0 0 10px; /* Rounded corners on the left side */
            display: flex; /* Flexbox for vertical alignment */
            align-items: center;
            justify-content: center;
            height: 160px; /* Fixed height for button */
            width: 60px; /* Fixed width for button */
        }

         .view-cart-btn:hover {
                background-color: #001f3f; /* Navy blue background on hover */
                color: white; /* White text on hover */
                border-color: white; /* White border on hover */
            }
    </style>
</head>

<body>
    <center>
        <h1>Food Selection</h1>
        <form asp-action="Index" asp-controller="food" method="post">
            <div>
                @if (Model.FoodItems != null && Model.FoodItems.Any())
                {
                    @foreach (var meal in Model.FoodItems)
                    {
                        <div class="meal-box">
                            <div class="meal-info">
                                <h2>@meal.productName</h2>
                                <p>@meal.productInformation</p>
                                <p class="price">@meal.productPrice EGP</p>
                                <button type="button" class="add-to-cart-btn" onclick="addcart(@meal.id)">Add to Cart</button>
                            </div>
                            <div class="meal-image-quantity">
                                <img src="~/images/@meal.productImage" alt="@meal.productName" />
                                <div class="quantity-controls">
                                    <button type="button" class="quantity-btn" onclick="updateQuantity(@meal.id, -1)">-</button>
                                    <input type="text" id="quantity_@meal.id" class="quantity-input" value="1" readonly />
                                    <button type="button" class="quantity-btn" onclick="updateQuantity(@meal.id, 1)">+</button>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p>No food items available.</p>
                }
            </div>
        </form>

        @*<a href="/cart" class="view-cart-btn">View Cart</a>*@
        <a href="/cart" class="view-cart-btn">
            <i class="fas fa-shopping-cart"></i> <!-- Font Awesome cart icon -->
        </a>
    </center>

    <script type="text/javascript">
        function updateQuantity(mealId, change) {
            var quantityInput = document.getElementById('quantity_' + mealId);
            var currentQuantity = parseInt(quantityInput.value);
            var newQuantity = currentQuantity + change;
            if (newQuantity < 1) {
                newQuantity = 1;
            }
            quantityInput.value = newQuantity;
        }

        function addcart(mealId) {
            var quantity = document.getElementById('quantity_' + mealId).value;
            var url = '@Url.Content("~/")' + "Cart/AddProductToCartAsync";

            $.ajax({
                url: url,
                type: "POST",
                data: { id: mealId, quantity: quantity },
                success: function (data) {
                    if (data.success) {
                        alert('Product added to cart!');
                        GetTotalPrice();  // Update total price
                        Price(id);  // Update price for the specific item
                        Total();  // Update overall totals
                    } else {
                        alert('Could not add product to cart: ' + data.message);
                    }
                },
                error: function () {
                    alert('There was an error adding the product to the cart.');
                }
            });
        }

        function GetTotalPrice() {
            $.ajax({
                url: '@Url.Action("GetTotalPrice", "Cart")',
                type: 'GET',
                success: function(response) {
                    if (response.totalPrice !== undefined) {
                        document.getElementById("total-price").innerHTML = response.totalPrice.toFixed(2) + ' EGP';
                    }
                }
            });
        }

        function Price(id) {
            $.ajax({
                url: '@Url.Action("Price", "Cart")/' + id,
                type: 'GET',
                success: function(response) {
                    if (response.totalItemPrice !== undefined) {
                        document.getElementById("TotalItem_" + id).innerHTML = response.totalItemPrice.toFixed(2) + ' EGP';
                    }
                }
            });
        }

        function Total() {
            GetTotalPrice();
        }
    </script>
</body>





