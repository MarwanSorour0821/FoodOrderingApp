@*@model FoodApplication.Models.drinkViewModel

    @{
        ViewData["Title"] = "Drink";
    }

    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Drink</title>

        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
        <style>
            body {
                background-color: #1B263B; /* Navy blue background */
                color: #FFFFFF; /* White text */
                font-family: 'Arial', sans-serif;
            }

            h1 {
                color: #FFFFFF;
                text-align: center;
                margin: 20px 0;
                font-weight: bold;
            }

            .meal-box {
                display: flex;
                justify-content: space-between;
                align-items: center;
                background-color: #1B263B; /* Light grey for meal boxes */
                border-radius: 8px;
                margin-bottom: 15px;
                padding: 15px;
                box-shadow: 0 0 5px rgba(0,0,0,0.1);
                color: white;
            }

                .meal-box img {
                    width: 100px;
                    height: 100px;
                    object-fit: cover;
                    border-radius: 8px;
                    margin-right: 20px;
                }

            .meal-info {
                flex-grow: 1;
                color: #FFFFFF; /* Navy blue text for meal info */
                display: flex;
                flex-direction: column;
                justify-content: space-between;
            }

                .meal-info h2 {
                    margin: 0;
                    font-size: 22px;
                    font-weight: bold;
                    color: #1B263B; /* Navy blue text */
                }

                .meal-info p {
                    margin: 5px 0;
                    font-size: 16px;
                }

            .price {
                font-size: 18px;
                font-weight: bold;
                color: #FFFFFF; /* Green color for the price */
            }

            .quantity-controls {
                display: flex;
                align-items: center;
                margin-top: 10px;
            }

            .quantity-btn {
                width: 30px;
                height: 30px;
                background-color: #1B263B;
                color: #FFFFFF;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                text-align: center;
                line-height: 30px;
                font-size: 18px;
                margin: 0 5px;
            }

                .quantity-btn:hover {
                    background-color: #324A5E;
                }

            .quantity-input {
                width: 40px;
                text-align: center;
                color: black;
            }

            .add-to-cart-btn {
                background-color: #1B263B;
                color: #FFFFFF;
                padding: 10px 20px;
                border: none;
                border-radius: 8px;
                cursor: pointer;
                margin-top: 10px;
                align-self: flex-end; /* Align to the bottom right */
            }

                .add-to-cart-btn:hover {
                    background-color: #324A5E;
                }

            .view-cart-btn {
                background-color: #28a745;
                color: white;
                padding: 15px 30px;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                font-size: 18px;
                text-align: center;
                margin-top: 20px;
                display: inline-block;
            }

                .view-cart-btn:hover {
                    background-color: #218838;
                }
        </style>
    </head>

    <body>
        <center>
            <h1>Select a Drink</h1>
            <form asp-action="Index" asp-controller="drink" method="post">
                @if (Model.drinkItems != null && Model.drinkItems.Any())
                {
                    @foreach (var drink in Model.drinkItems)
                    {
                        <div class="meal-box">
                            <div class="meal-info">
                                <h2>@drink.productName</h2>
                                <p>@drink.productInformation</p>
                                <p class="price">@drink.productPrice EGP</p>
                                <button type="button" class="add-to-cart-btn" onclick="addcart(@drink.id)">Add to Cart</button>
                            </div>
                            <div class="meal-image-quantity">
                                <img src="~/images/@drink.productImage" alt="@drink.productName" />
                                <div class="quantity-controls">
                                    <button type="button" class="quantity-btn" onclick="updateQuantity(@drink.id, -1)">-</button>
                                    <input type="text" id="quantity_@drink.id" class="quantity-input" value="1" readonly />
                                    <button type="button" class="quantity-btn" onclick="updateQuantity(@drink.id, 1)">+</button>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p>No drink items available.</p>
                }
            </form>

            <a href="/cart" class="view-cart-btn">View Cart</a>
        </center>

        <script type="text/javascript">
            function updateQuantity(mealId, change) {
                var quantityInput = document.getElementById('quantity_' + mealId);
                var currentQuantity = parseInt(quantityInput.value);
                var newQuantity = currentQuantity + change;
                if (newQuantity < 1) {
                    newQuantity = 1;
                }
                quantityInput.value = newQuantity;
            }

            function addcart(mealId) {
                var quantity = document.getElementById('quantity_' + mealId).value;
                var url = '@Url.Content("~/")' + "Cart/AddProductToCartAsync";

                $.ajax({
                    url: url,
                    type: "POST",
                    data: { id: mealId, quantity: quantity },
                    success: function (data) {
                        if (data.success) {
                            alert('Product added to cart!');
                            GetTotalPrice();  // Update total price
                            Price(id);  // Update price for the specific item
                            Total();  // Update overall totals
                        } else {
                            alert('Could not add product to cart: ' + data.message);
                        }
                    },
                    error: function () {
                        alert('There was an error adding the product to the cart.');
                    }
                });
            }

            function GetTotalPrice() {
                $.ajax({
                    url: '@Url.Action("GetTotalPrice", "Cart")',
                    type: 'GET',
                    success: function(response) {
                        if (response.totalPrice !== undefined) {
                            document.getElementById("total-price").innerHTML = response.totalPrice.toFixed(2) + ' EGP';
                        }
                    }
                });
            }

            function Price(id) {
                $.ajax({
                    url: '@Url.Action("Price", "Cart")/' + id,
                    type: 'GET',
                    success: function(response) {
                        if (response.totalItemPrice !== undefined) {
                            document.getElementById("TotalItem_" + id).innerHTML = response.totalItemPrice.toFixed(2) + ' EGP';
                        }
                    }
                });
            }

            function Total() {
                GetTotalPrice();
            }
        </script>
    </body>
    </html>*@

@model FoodApplication.Models.dessertViewModel

@{
    ViewData["Title"] = "Drink";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Drink</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        body {
            background-color: #1B263B; /* Navy blue background */
            color: #FFFFFF; /* White text */
            font-family: Georgia, 'Times New Roman', Times, serif;
        }

        h1 {
            color: #FFFFFF;
            text-align: center;
            margin: 20px 0;
            font-weight: bold;
        }

        .meal-box {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background-color: #1B263B; /* Same navy blue as the background */
            border-radius: 8px;
            margin-bottom: 15px;
            padding: 15px;
            color: white;
            border-bottom: 1px solid #ddd;
        }

        .meal-info {
            flex-grow: 1;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            margin-right: 20px;
            text-align: left
        }

            .meal-info h2 {
                margin: 0;
                font-size: 28px;
                font-weight: bold;
                color: #FFFFFF; /* White text */
            }

            .meal-info p {
                margin: 5px 0;
                font-size: 18px;
                color: #FFFFFF; /* White text */
            }

        .price {
            font-size: 18px;
            font-weight: bold;
            color: #FFFFFF; /* White text for the price */
        }

        .meal-image-quantity {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .meal-box img {
            width: 200px;
            height: 200px;
            object-fit: cover;
            border-radius: 15px;
            margin-bottom: 10px;
        }

        .quantity-controls {
            display: flex;
            align-items: center;
        }

        .quantity-btn {
            width: 30px;
            height: 30px;
            background-color: #1B263B;
            color: #FFFFFF;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            text-align: center;
            line-height: 30px;
            font-size: 18px;
            margin: 0 5px;
        }

            .quantity-btn:hover {
                background-color: #324A5E;
            }

        .quantity-input {
            width: 40px;
            text-align: center;
            color: black;
        }

        /*        .add-to-cart-btn {
            background-color: white;
            color: #1B263B;
            padding: 10px 20px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            margin-top: 10px;
            align-self: flex-start;
        }

            .add-to-cart-btn:hover {
                background-color: #1B263B;
                border-color: white;
                color: white;
            }*/

        .add-to-cart-btn {
            background-color: white; /* Initial white background */
            color: #001f3f; /* Navy blue text */
            padding: 10px 20px;
            border: 2px solid #001f3f; /* Navy blue border */
            border-radius: 10px;
            cursor: pointer;
            margin-top: 10px;
            transition: background-color 0.3s, color 0.3s;
            align-self: flex-start;
        }

            .add-to-cart-btn:hover {
                background-color: #001f3f; /* Navy blue background on hover */
                color: white; /* White text on hover */
                border-color: white; /* White border on hover */
            }

        .view-cart-btn {
            position: fixed; /* Fixed position on the screen */
            top: 50%; /* Center vertically */
            right: 0; /* Align to the right of the screen */
            transform: translateY(-50%); /* Adjust position to be centered vertically */
            background-color: white; /* White background initially */
            color: #001f3f; /* Navy blue text */
            padding: 20px; /* Padding around the icon */
            border: 2px solid #001f3f; /* Navy blue border */
            font-size: 24px; /* Font size for the icon */
            text-align: center;
            cursor: pointer;
            transition: background-color 0.3s, color 0.3s, border-color 0.3s; /* Smooth transition for hover effect */
            z-index: 1000; /* Ensures it stays above other content */
            border-radius: 10px 0 0 10px; /* Rounded corners on the left side */
            display: flex; /* Flexbox for vertical alignment */
            align-items: center;
            justify-content: center;
            height: 160px; /* Fixed height for button */
            width: 60px; /* Fixed width for button */
        }

            .view-cart-btn:hover {
                background-color: #001f3f; /* Navy blue background on hover */
                color: white; /* White text on hover */
                border-color: white; /* White border on hover */
            }
    </style>
</head>

<body>
    <center>
        <h1>Dessert Selection</h1>
        <form asp-action="Index" asp-controller="dessert" method="post">
            @if (Model.dessertItems != null && Model.dessertItems.Any())
            {
                @foreach (var drink in Model.dessertItems)
                {
                    <div class="meal-box">
                        <div class="meal-info">
                            <h2>@drink.productName</h2>
                            <p>@drink.productInformation</p>
                            <p class="price">@drink.productPrice EGP</p>
                            <button type="button" class="add-to-cart-btn" onclick="addcart(@drink.id)">Add to Cart</button>
                        </div>
                        <div class="meal-image-quantity">
                            <img src="~/images/@drink.productImage" alt="@drink.productName" />
                            <div class="quantity-controls">
                                <button type="button" class="quantity-btn" onclick="updateQuantity(@drink.id, -1)">-</button>
                                <input type="text" id="quantity_@drink.id" class="quantity-input" value="1" readonly />
                                <button type="button" class="quantity-btn" onclick="updateQuantity(@drink.id, 1)">+</button>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <p>No drink items available.</p>
            }
        </form>

        <a href="/cart" class="view-cart-btn">
            <i class="fas fa-shopping-cart"></i> <!-- Font Awesome cart icon -->
        </a>
    </center>

    <script type="text/javascript">
        function updateQuantity(mealId, change) {
            var quantityInput = document.getElementById('quantity_' + mealId);
            var currentQuantity = parseInt(quantityInput.value);
            var newQuantity = currentQuantity + change;
            if (newQuantity < 1) {
                newQuantity = 1;
            }
            quantityInput.value = newQuantity;
        }

        function addcart(mealId) {
            var quantity = document.getElementById('quantity_' + mealId).value;
            var url = '@Url.Content("~/")' + "Cart/AddProductToCartAsync";

            $.ajax({
                url: url,
                type: "POST",
                data: { id: mealId, quantity: quantity },
                success: function (data) {
                    if (data.success) {
                        alert('Product added to cart!');
                        GetTotalPrice();  // Update total price
                        Price(id);  // Update price for the specific item
                        Total();  // Update overall totals
                    } else {
                        alert('Could not add product to cart: ' + data.message);
                    }
                },
                error: function () {
                    alert('There was an error adding the product to the cart.');
                }
            });
        }

        function GetTotalPrice() {
            $.ajax({
                url: '@Url.Action("GetTotalPrice", "Cart")',
                type: 'GET',
                success: function(response) {
                    if (response.totalPrice !== undefined) {
                        document.getElementById("total-price").innerHTML = response.totalPrice.toFixed(2) + ' EGP';
                    }
                }
            });
        }

        function Price(id) {
            $.ajax({
                url: '@Url.Action("Price", "Cart")/' + id,
                type: 'GET',
                success: function(response) {
                    if (response.totalItemPrice !== undefined) {
                        document.getElementById("TotalItem_" + id).innerHTML = response.totalItemPrice.toFixed(2) + ' EGP';
                    }
                }
            });
        }

        function Total() {
            GetTotalPrice();
        }
    </script>
</body>
</html>

