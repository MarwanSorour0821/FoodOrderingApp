@model List<OrderItem>
<h2>Your Cart</h2>

@if (Model.Count == 0)
{
    <p>Your cart is empty.</p>
}
else
{
<table class="table">
    <thead>
        <tr>
            <th>Product ID</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Total</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.productID</td>
                <td>@item.productPrice.ToString("C")</td>

                <td>
                    <!-- Quantity controls -->
                    <button type="button" onclick="updateQuantity(@item.productID, -1)">−</button>
                    <span id="quantity_@item.productID">@item.itemQuantity</span>
                    <button type="button" onclick="updateQuantity(@item.productID, 1)">+</button>
                </td>
                <td id="total_@item.productID">@((item.productPrice * item.itemQuantity).ToString("C"))</td>
                <td>
                    <!-- Remove button -->
                    <p>@item.productID</p>
                    <button type="button" onclick='removeItem(@item.productID)'>Remove</button>
                </td>
            </tr>
        }
    </tbody>

    
</table>
<button type="button" onclick="orderNow()">Order Now</button>
    
<script type="text/javascript">// Update prices when the page loads
            //$(document).ready(function () {
            //    Total();
            //});
        function removeItem(productID) {
            //alert('Removing Item');

                $.ajax({
                    url : '@Url.Content("~/")' + "Cart/removeItem",
                    type: 'GET',
                    data: { productID: productID },
                    success: function(data) {
                        if (data.success) {
                            location.reload(); // Reload the page to reflect changes
                        } else {
                            alert('Could not remove item: ' + data.message);
                        }
                    },
                    error: function() {
                        alert('There was an error removing the item.');
                    }
                });
            }

        //function updateQuantity(productID) {
        //    var quantityInput = document.getElementById('quantity_' + productID);
        //    var currentQuantity = parseInt(quantityInput.value);
        //    var newQuantity = currentQuantity;

        //    quantityInput.value = newQuantity;
        //}

        function updateQuantity(productID, change) {
            var quantityElement = document.getElementById('quantity_' + productID);
            var currentQuantity = parseInt(quantityElement.innerHTML);
            var newQuantity = currentQuantity + change;

            if (newQuantity > 0) {
                // Update the UI
                quantityElement.innerHTML = newQuantity;

                // Send the updated quantity to the server
                $.ajax({
                    url: '@Url.Content("~/")' + "Cart/UpdateQuantity",
                    type: 'GET',
                    data: { productID: productID, newQuantity: newQuantity },
                    success: function (data) {
                        if (data.success) {
                            // Update the total price for the item
                            var totalElement = document.getElementById('total_' + productID);
                            totalElement.innerHTML = (data.newTotalPrice).toFixed(2) + ' EGP';
                        } else {
                            alert('Could not update quantity: ' + data.message);
                        }
                    },
                    error: function () {
                        alert('There was an error updating the quantity.');
                    }
                });
            } else if (newQuantity == 0) {
                removeItem(productID);
            }
        }

        //function orderNow() {
            @*$.ajax({
                url: '@Url.Content("~/")' + "Cart/CreateOrder",
                type: 'POST',
                success: function(data) {
                    if (data.success) {

                        window.location.href = '@Url.Content("~/")' + "Cart/OrderDetails";
                    } else {
                        alert('Failed to create order: ' + data.message);
                    }
                },
                error: function() {
                    alert('There was an error creating the order.');
                }
            });*@



        //}

        function orderNow() {
            $.ajax({
                url: '@Url.Content("~/")' + "Cart/CreateOrder",
                type: 'POST',
                success: function(data) {
                    if (data.success) {
                        var url = '@Url.Content("~/")' + "Cart/OrderDetails";
                        console.log(url);
                        // Now call another AJAX to get the order details
                        $.ajax({
                            url: url,
                            type: 'GET',

                            //data: { orderId: data.orderId }, // Pass the order ID to the controller
                            success: function (response) {
                                console.log(url);
                                alert('order created');
                                $('body').html(response); // Replace the body content with the OrderDetails view
                            },
                            error: function () {
                                console.log(url);
                                alert('Failed to load the order details.');
                            }
                        });
                    } else {
                        alert('Failed to create order: ' + data.message);
                    }
                },
                error: function() {
                    alert('There was an error creating the order.');
                }
            });
        }

</script>
    
    

}
